<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//IF YOU USE GMnet PUNCH demo project:
if (!script_exists(asset_get_index("htme_init"))) {
   self.game = "gmnet_punch_122"
}
//IF YOU USE GMnet ENGINE demo project:
else {
   self.game = "gmnet_engine_130"
}
//IF YOU USE YOUR OWN SERVER - Change self.game!

///Recieve lobby data from the master server
udphp_downloadServerList(4,"date","DESC",self.game);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Waits for master server response
udphp_downloadNetworking();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Draw lobby</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background
draw_rectangle_colour(0,55,room_width,80,c_white,c_white,c_orange,c_orange,false);
draw_rectangle_colour(0,80,room_width,160,c_aqua,c_aqua,c_white,c_white,false);
draw_rectangle_colour(0,160,room_width,240,c_aqua,c_aqua,c_white,c_white,false);
draw_rectangle_colour(0,240,room_width,320,c_aqua,c_aqua,c_white,c_white,false);
draw_rectangle_colour(0,320,room_width,400,c_aqua,c_aqua,c_white,c_white,false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title and Controls
draw_set_colour(c_red);
draw_text(5,5,"Demo Lobby");
draw_set_colour(c_black);
draw_text(5,5,"
Controls: 1-4: Connect to server | ESC: Back | R: Refresh");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Online servers

draw_line(0,55,room_width,55);
draw_text(room_width/2-string_width("=ONLINE SERVERS=")/2,60,"=ONLINE SERVERS=");
//Check if refreshing
if (global.udphp_downloadlist_refreshing) {
   draw_set_colour(c_red);
   draw_text(room_width-140,60,"Refreshing...");
   draw_set_colour(c_black);
}
draw_line(0,80,room_width,80);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Servers (Loop)
var l = global.udphp_downloadlist;
for (var i = 0; i&lt;4;i++) {
    draw_text(10,85+80*i,"=("+string(i+1)+")=");
    if (ds_exists(l,ds_type_list)) {
        if (ds_list_size(l)&gt;i) {
            //Get stuff from the downloadlist
            var entry = l[| i];
            var ip = entry[? "ip"];
            var game = entry[? "data1"];
            var servername = entry[? "data2"];
            var description = entry[? "data3"];
            draw_text(70,85+80*i,servername+" | "+ip);
            draw_text(70,115+80*i,description);
        }
    }
    draw_line(0,160+80*i,room_width,160+80*i);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Footer
var str = "For demonstration purposes only. Only lists four 'random' servers!"
draw_text(room_width/2-string_width(str)/2,440,str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Call create event
event_perform(ev_create,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOAD GAME SERVER ON SLOT 4
var l = global.udphp_downloadlist;
if (ds_exists(l,ds_type_list)) {
    if (ds_list_size(l)&gt;3) {
        var entry = l[| 3];
        var ip = entry[? "ip"];
        var game = entry[? "data1"];
        if (game != self.game) {
           //Not compatible game, exit
           show_message("Game server or version is incompatible!");
           exit;
        }
        //====GMnet PUNCH DEMO ONLY
        if (!script_exists(asset_get_index("htme_init"))) {
            //Create new client - See obj_client + manual for more information
            global.tmp_lobby_ip = ip;
            instance_create(0,0,asset_get_index("obj_lobbyclient"));
            //Return to main room
            room_goto(asset_get_index("udphp_room"));
        }
        //====GMnet ENGINE DEMO ONLY
        else {
            //Setup client, on success go to waiting room, otherwise end game
            //We don't actually know the port, but that doesn't matter, the master
            //server will tell us the port when we connect
            //
            //THE LINE BELOW is equivalent to:
            //if (htme_clientStart(ip, 0)) {
            if (script_execute(asset_get_index("htme_clientStart"),ip, 0)) {
                //Wait for connection success!
                room_goto(asset_get_index("htme_rom_connecting"));
            } else {
                show_message("Could not start client! Check your network configuration!");
            }
        }
    } else {
      //Do nothing - There is no server on this slot
    }
} else {
  //Do nothing - There is no server on this slot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOAD GAME SERVER ON SLOT 3
var l = global.udphp_downloadlist;
if (ds_exists(l,ds_type_list)) {
    if (ds_list_size(l)&gt;2) {
        var entry = l[| 2];
        var ip = entry[? "ip"];
        var game = entry[? "data1"];
        if (game != self.game) {
           //Not compatible game, exit
           show_message("Game server or version is incompatible!");
           exit;
        }
        //====GMnet PUNCH DEMO ONLY
        if (!script_exists(asset_get_index("htme_init"))) {
            //Create new client - See obj_client + manual for more information
            global.tmp_lobby_ip = ip;
            instance_create(0,0,asset_get_index("obj_lobbyclient"));
            //Return to main room
            room_goto(asset_get_index("udphp_room"));
        }
        //====GMnet ENGINE DEMO ONLY
        else {
            //Setup client, on success go to waiting room, otherwise end game
            //We don't actually know the port, but that doesn't matter, the master
            //server will tell us the port when we connect
            //
            //THE LINE BELOW is equivalent to:
            //if (htme_clientStart(ip, 0)) {
            if (script_execute(asset_get_index("htme_clientStart"),ip, 0)) {
                //Wait for connection success!
                room_goto(asset_get_index("htme_rom_connecting"));
            } else {
                show_message("Could not start client! Check your network configuration!");
            }
        }
    } else {
      //Do nothing - There is no server on this slot
    }
} else {
  //Do nothing - There is no server on this slot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOAD GAME SERVER ON SLOT 2
var l = global.udphp_downloadlist;
if (ds_exists(l,ds_type_list)) {
    if (ds_list_size(l)&gt;1) {
        var entry = l[| 1];
        var ip = entry[? "ip"];
        var game = entry[? "data1"];
        if (game != self.game) {
           //Not compatible game, exit
           show_message("Game server or version is incompatible!");
           exit;
        }
        //====GMnet PUNCH DEMO ONLY
        if (!script_exists(asset_get_index("htme_init"))) {
            //Create new client - See obj_client + manual for more information
            global.tmp_lobby_ip = ip;
            instance_create(0,0,asset_get_index("obj_lobbyclient"));
            //Return to main room
            room_goto(asset_get_index("udphp_room"));
        }
        //====GMnet ENGINE DEMO ONLY
        else {
            //Setup client, on success go to waiting room, otherwise end game
            //We don't actually know the port, but that doesn't matter, the master
            //server will tell us the port when we connect
            //
            //THE LINE BELOW is equivalent to:
            //if (htme_clientStart(ip, 0)) {
            if (script_execute(asset_get_index("htme_clientStart"),ip, 0)) {
                //Wait for connection success!
                room_goto(asset_get_index("htme_rom_connecting"));
            } else {
                show_message("Could not start client! Check your network configuration!");
            }
        }
    } else {
      //Do nothing - There is no server on this slot
    }
} else {
  //Do nothing - There is no server on this slot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOAD GAME SERVER ON SLOT 1
var l = global.udphp_downloadlist;
if (ds_exists(l,ds_type_list)) {
    if (ds_list_size(l)&gt;0) {
        var entry = l[| 0];
        var ip = entry[? "ip"];
        var game = entry[? "data1"];
        if (game != self.game) {
           //Not compatible game, exit
           show_message("Game server or version is incompatible!");
           exit;
        }
        //====GMnet PUNCH DEMO ONLY
        if (!script_exists(asset_get_index("htme_init"))) {
            //Create new client - See obj_client + manual for more information
            global.tmp_lobby_ip = ip;
            instance_create(0,0,asset_get_index("obj_lobbyclient"));
            //Return to main room
            room_goto(asset_get_index("udphp_room"));
        }
        //====GMnet ENGINE DEMO ONLY
        else {
            //Setup client, on success go to waiting room, otherwise end game
            //We don't actually know the port, but that doesn't matter, the master
            //server will tell us the port when we connect
            //
            //THE LINE BELOW is equivalent to:
            //if (htme_clientStart(ip, 0)) {
            if (script_execute(asset_get_index("htme_clientStart"),ip, 0)) {
                //Wait for connection success!
                room_goto(asset_get_index("htme_rom_connecting"));
            } else {
                show_message("Could not start client! Check your network configuration!");
            }
        }
    } else {
      //Do nothing - There is no server on this slot
    }
} else {
  //Do nothing - There is no server on this slot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go back
//====GMnet PUNCH DEMO ONLY
if (!script_exists(asset_get_index("htme_init"))) {
   room_goto(asset_get_index("udphp_room"));
}
//====GMnet ENGINE DEMO ONLY
else {
   room_goto(asset_get_index("htme_rom_menu"));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
